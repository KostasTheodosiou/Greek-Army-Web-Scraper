{"version":3,"sources":["components/Navbar.jsx","components/ArticleItem.jsx","components/Articles.jsx","components/MainApp.jsx","components/LinkSignalCli.jsx","components/BotConfigurator.jsx","components/EntryForm.jsx","components/CategoryGrid.jsx","components/ArticleCategoriser.jsx","components/CheckBox.jsx","components/articleCard.jsx","components/NewsFeed.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Navbar","React","createElement","className","Link","to","ArticleItem","_ref","articles","sendArticle","copyArticle","map","article","index","key","date","title","href","link","target","rel","onClick","async","fetchArticles","url","name","axios","get","params","names","data","error","console","Articles","ArticleNames","useState","armyArticles","setArmyArticles","modArticles","setModArticles","geethaArticles","setGeethaArticles","kranosArticles","setKranosArticles","spartakosArticles","setSpartakosArticles","armyvoiceArticles","setArmyvoiceArticles","MilitaireArticles","setMilitaireArticles","useEffect","i","fetchAllArticles","log","concat","response","navigator","clipboard","writeText","err","MainApp","LinkSignalCli","qrCode","setQrCode","linking","setLinking","linked","setLinked","started","setStarted","DaemonStarted","setDaemonStarted","socket","WebSocket","onopen","onmessage","event","message","parsedMessage","JSON","parse","type","onclose","fetch","method","json","disabled","send","stringify","QRCode","value","size","level","includeMargin","bgColor","fgColor","BotConfigurator","config","setConfig","groupID","onSubmit","e","preventDefault","phoneNumber","onChange","[object Object]","required","EntryForm","addEntry","fetchNewArticles","setTitle","setLink","addAnEntry","categories","id","CategoryGrid","category","ArticleCategoriser","entries","setEntries","intervalId","setInterval","clearInterval","draggedIndex","setDraggedIndex","handleDragOver","draggable","onDragStart","handleDragStart","onDragOver","onDrop","handleDrop","updatedItems","movedItem","splice","CheckBox","SwitchState","checked","style","cursor","FaCheckCircle","FaRegCircle","ArticleCard","setChecked","_article$tags$include","_article$tags","tags","includes","ToggleRead","articleID","articleTags","post","updates","Fragment","NewsFeed","intervalRef","useRef","Date","toLocaleTimeString","revdata","reverse","current","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e9a14a06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <ul className=\"navbar-menu\">\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/\" className=\"navbar-link\">\r\n                            Ρυθμίσεις Signal\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/MainApp\" className=\"navbar-link\">\r\n                            Βασικές Σελίδες\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/NewsFeed\" className=\"navbar-link\">\r\n                            Ροή Αρθρων\r\n                        </Link>\r\n                    </li>\r\n                    {/* <li className=\"navbar-item\">\r\n                        <Link to=\"/ArticleCategoriser\" className=\"navbar-link\">\r\n                            Κατηγοριοποίηση Άρθρων\r\n                        </Link>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./styles/articleItem.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ArticleItem = ({ articles, sendArticle, copyArticle }) => {\r\n    return (\r\n        <div className=\"articles-container\">\r\n            {articles.map((article, index) => (\r\n                <div key={index} className=\"article-card\">\r\n                    <h3 className=\"date\">{article.date}</h3>\r\n                    <h3 className=\"article-title\">{article.title}</h3>\r\n                    <a\r\n                        className=\"article-link\"\r\n                        href={article.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        {article.link}\r\n                    </a>\r\n                    <button\r\n                        className=\"send-button\"\r\n                        onClick={() => sendArticle(article)}\r\n                    >\r\n                        Send\r\n                    </button>\r\n                    <button\r\n                        className=\"copy-button\"\r\n                        onClick={() => copyArticle(article)}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nArticleItem.propTypes = {\r\n    articles: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            title: PropTypes.string.isRequired,\r\n            link: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n};\r\n\r\nexport default ArticleItem;\r\n","// src/Articles.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles/articles.css\";\r\nimport ArticleItem from \"./ArticleItem\";\r\n\r\nasync function fetchArticles(url, name) {\r\n    try {\r\n        const response = await axios.get(url, {\r\n            params: {\r\n                names: name, // Axios automatically serializes the array\r\n            },\r\n        });\r\n        //console.log(\"GET request running\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching articles:\", error);\r\n        return [{ title: \"\", link: \"\" }];\r\n    }\r\n}\r\n\r\nconst Articles = () => {\r\n    const [ArticleNames] = useState([\r\n        \"Army.gr\",\r\n        \"mod.mil\",\r\n        \"Geetha\",\r\n        \"kranosgr\",\r\n        \"spartakos\",\r\n        \"armyvoice\",\r\n        \"Militaire\",\r\n    ]);\r\n    const [armyArticles, setArmyArticles] = useState([]);\r\n    const [modArticles, setModArticles] = useState([]);\r\n    const [geethaArticles, setGeethaArticles] = useState([]);\r\n    const [kranosArticles, setKranosArticles] = useState([]);\r\n    const [spartakosArticles, setSpartakosArticles] = useState([]);\r\n    const [armyvoiceArticles, setArmyvoiceArticles] = useState([]);\r\n    const [MilitaireArticles, setMilitaireArticles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAllArticles = async () => {\r\n            for (const i in ArticleNames) {\r\n                const data = await fetchArticles(\r\n                    \"http://192.168.1.12:5000/api/Articles\",\r\n                    ArticleNames[i] // Axios automatically serializes the array\r\n                );\r\n                //console.log(data);\r\n                if (ArticleNames[i] === \"Army.gr\") {\r\n                    setArmyArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"mod.mil\") {\r\n                    setModArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"Geetha\") {\r\n                    setGeethaArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"kranosgr\") {\r\n                    setKranosArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"spartakos\") {\r\n                    setSpartakosArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"armyvoice\") {\r\n                    setArmyvoiceArticles(data);\r\n                }\r\n                if (ArticleNames[i] === \"Militaire\") {\r\n                    setMilitaireArticles(data);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchAllArticles();\r\n    }, []);\r\n\r\n    const sendArticle = async (article) => {\r\n        console.log(`Sending: ${article.title}`);\r\n        try {\r\n            const response = await axios.get(\r\n                \"http://localhost:5000/api/SendSignalMessage\",\r\n                {\r\n                    params: {\r\n                        article: article,\r\n                    },\r\n                }\r\n            );\r\n            console.log(\"GET request running\");\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error sending Article:\", error);\r\n            return [{ title: \"\", link: \"\" }];\r\n        }\r\n    };\r\n\r\n    const copyArticle = async (article) => {\r\n        try {\r\n            await navigator.clipboard.writeText(\r\n                article.title + \"\\n\\n\" + article.link\r\n            );\r\n            console.log(\"Text copied to clipboard\");\r\n        } catch (err) {\r\n            console.error(\"Failed to copy text: \", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Άρθρα Army.gr</h1>\r\n            <ArticleItem\r\n                articles={armyArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα ΥΕΘΑ</h1>\r\n            <ArticleItem\r\n                articles={modArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα ΓΕΕΘΑ</h1>\r\n            <ArticleItem\r\n                articles={geethaArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα kranosgr</h1>\r\n            <ArticleItem\r\n                articles={kranosArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα Spartakos</h1>\r\n            <ArticleItem\r\n                articles={spartakosArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα armyvoice</h1>\r\n            <ArticleItem\r\n                articles={armyvoiceArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n            <h1>Άρθρα Militaire</h1>\r\n            <ArticleItem\r\n                articles={MilitaireArticles}\r\n                sendArticle={sendArticle}\r\n                copyArticle={copyArticle}\r\n            ></ArticleItem>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Articles;\r\n","// src/App.js\nimport React from \"react\";\nimport Articles from \"./Articles\";\nimport \"./styles/MainApp.css\";\n\nfunction MainApp() {\n    return (\n        <div className=\"MainApp\">\n            <header className=\"MainAppHeader\">\n                <h1>Άρθα ιστοσελίδων με Στρατιωτικό περιεχόμενο</h1>\n            </header>\n            <Articles />\n        </div>\n    );\n}\n\nexport default MainApp;\n","// src/LinkSignalCli.js\r\nimport React, { useState } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport \"./styles/linksignalCli.css\";\r\n\r\nconst LinkSignalCli = () => {\r\n    const [qrCode, setQrCode] = useState(null);\r\n    const [linking, setLinking] = useState(false);\r\n    const [linked, setLinked] = useState(false);\r\n    const [started, setStarted] = useState(false);\r\n    const [DaemonStarted, setDaemonStarted] = useState(false);\r\n\r\n    const initiateStart = async () => {\r\n        setStarted(true);\r\n        try {\r\n            const response = await fetch(\"/api/start-signal-cli\", {\r\n                method: \"POST\",\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            // if (data.hasStarted) {\r\n            //     setStarted(true);\r\n            // } else {\r\n            //     setStarted(false);\r\n            // }\r\n        } catch (error) {\r\n            console.error(\"Error initiating linking:\", error);\r\n            setLinking(false);\r\n        }\r\n    };\r\n\r\n    const socket = new WebSocket(\"ws://192.168.1.12:5001\");\r\n\r\n    socket.onopen = () => {\r\n        console.log(\"Connected to the server\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n        const message = event.data;\r\n        console.log(message);\r\n\r\n        let parsedMessage = JSON.parse(message);\r\n\r\n        if (parsedMessage.type === \"qrCode\") {\r\n            setQrCode(parsedMessage.data);\r\n        } else if (parsedMessage.type === \"CheckConnection\") {\r\n            setLinked(true);\r\n        }\r\n        if (parsedMessage.type === \"StartDaemon\") {\r\n            setDaemonStarted(true);\r\n        } else {\r\n            console.log(\"invalid operation\");\r\n        }\r\n    };\r\n\r\n    socket.onclose = () => {\r\n        console.log(\"Disconnected from the server\");\r\n    };\r\n\r\n    const initiateLinking = async () => {\r\n        setLinking(true);\r\n        try {\r\n            const message = {\r\n                type: \"link\",\r\n                data: {},\r\n            };\r\n            socket.send(JSON.stringify(message));\r\n        } catch (error) {\r\n            console.error(\"Error initiating linking:\", error);\r\n            setLinking(false);\r\n        }\r\n    };\r\n\r\n    const CheckConnection = async () => {\r\n        try {\r\n            const message = {\r\n                type: \"CheckConnection\",\r\n                data: {},\r\n            };\r\n            socket.send(JSON.stringify(message));\r\n        } catch (error) {\r\n            console.error(\"Error Checking Connection:\", error);\r\n        }\r\n    };\r\n\r\n    const startDaemon = async () => {\r\n        try {\r\n            const message = {\r\n                type: \"startDaemon\",\r\n                data: {},\r\n            };\r\n            socket.send(JSON.stringify(message));\r\n        } catch (error) {\r\n            console.error(\"Error Checking Connection:\", error);\r\n        }\r\n    };\r\n\r\n    const sendSignalMessage = async () => {\r\n        try {\r\n            const message = {\r\n                type: \"SendSignalMessage\",\r\n                data: {},\r\n            };\r\n            socket.send(JSON.stringify(message));\r\n        } catch (error) {\r\n            console.error(\"Error Checking Connection:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"link-container\">\r\n            <div className=\"buttons\">\r\n                <button onClick={initiateStart} disabled={linking}>\r\n                    {linking ? \"Starting...\" : \"Start Signal-Bot\"}\r\n                </button>\r\n                <button onClick={initiateLinking} disabled={linking}>\r\n                    {linking ? \"Linking...\" : \"Link Signal-CLI\"}\r\n                </button>\r\n                <button onClick={CheckConnection} disabled={linking}>\r\n                    {linked ? \"Checking\" : \"Check\"}\r\n                </button>\r\n                <button onClick={startDaemon} disabled={DaemonStarted}>\r\n                    {DaemonStarted ? \"Bot Started\" : \"Start Bot\"}\r\n                </button>\r\n                <button onClick={sendSignalMessage}>Send Signal Message</button>\r\n            </div>\r\n            <div className=\"qr-code-container\">\r\n                {qrCode && (\r\n                    <div>\r\n                        <h3>Scan this QR Code with your Signal app:</h3>\r\n                        <QRCode\r\n                            className=\"QRCode\"\r\n                            value={qrCode}\r\n                            size={512}\r\n                            level={\"H\"}\r\n                            includeMargin={true}\r\n                            bgColor=\"#FFFFFF\"\r\n                            fgColor=\"#000000\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                {linked && <h3> LINKED </h3>}\r\n                {started && <h3> STARTED </h3>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LinkSignalCli;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles/botConfigurator.css\";\r\nimport LinkSignalCli from \"./LinkSignalCli\";\r\n\r\nconst BotConfigurator = () => {\r\n    const [config, setConfig] = useState({\r\n        groupID: \"\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setConfig({\r\n            ...config,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(config);\r\n    };\r\n\r\n    return (\r\n        <div className=\"botConfig\">\r\n            <LinkSignalCli />\r\n            <form onSubmit={handleSubmit} className=\"settings-form\">\r\n                <div>\r\n                    <label> groupID:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"groupID\"\r\n                        value={config.phoneNumber}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BotConfigurator;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction EntryForm({ addEntry, fetchNewArticles }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [link, setLink] = useState(\"\");\r\n\r\n    async function addAnEntry(article) {\r\n        try {\r\n            const response = await axios.get(\r\n                \"http://192.168.1.12:5000/api/AddEntry\",\r\n                {\r\n                    params: {\r\n                        title: article.title,\r\n                        link: article.link,\r\n                    },\r\n                }\r\n            );\r\n            console.log(\"GET request running\");\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error fetching articles:\", error);\r\n            return [{ title: \"\", link: \"\" }];\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (title && link) {\r\n            addAnEntry({ title, link });\r\n            setTitle(\"\");\r\n            setLink(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"entry-form\">\r\n            <div>\r\n                <label>Title:</label>\r\n                <input\r\n                    className=\"entrybox\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Link:</label>\r\n                <input\r\n                    className=\"entrybox\"\r\n                    type=\"url\"\r\n                    value={link}\r\n                    onChange={(e) => setLink(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Add Entry</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EntryForm;\r\n","import React from \"react\";\r\nimport \"./styles/CategoryGrid.css\";\r\n\r\nconst categories = [\r\n    { id: 1, name: \"Α/ΓΕΣ\" },\r\n    { id: 2, name: \"Α/ΓΕΕΘΑ\" },\r\n    { id: 3, name: \"ΥΠΕΘΑ\" },\r\n    { id: 4, name: \"ΥΦΕΘΑ\" },\r\n    { id: 5, name: \"ΣΤΡΑΤΟΣ\" },\r\n    { id: 6, name: \"ΚΑΤΑΓΓΕΛΙΕΣ\" },\r\n    { id: 7, name: \"ΕΞΟΠΛΙΣΤΙΚΑ\" },\r\n    { id: 8, name: \"ΔΙΕΘΝΗ\" },\r\n    // Add more categories as needed\r\n];\r\n\r\nfunction CategoryGrid() {\r\n    return (\r\n        <div className=\"category-grid\">\r\n            {categories.map((category) => (\r\n                <div key={category.id} className=\"category-box\">\r\n                    {category.name}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles/articleCategoriser.css\";\r\nimport EntryForm from \"./EntryForm\";\r\nimport CategoryGrid from \"./CategoryGrid\";\r\n//import { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\n\r\nasync function fetchArticles(url) {\r\n    try {\r\n        const response = await axios.get(url);\r\n        //console.log(\"GET request running\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching articles:\", error);\r\n        return [{ title: \"\", link: \"\" }];\r\n    }\r\n}\r\n\r\nfunction ArticleCategoriser() {\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchNewArticles = async () => {\r\n            const data = await fetchArticles(\r\n                \"http://192.168.1.12:5000/api/newArticles\"\r\n            );\r\n            setEntries(data);\r\n        };\r\n        fetchNewArticles();\r\n\r\n        const intervalId = setInterval(fetchNewArticles, 5000); // Poll every 5 seconds\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const [draggedIndex, setDraggedIndex] = useState(null);\r\n\r\n    const handleDragStart = (e, index) => {\r\n        setDraggedIndex(index);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        if (draggedIndex === null) return;\r\n\r\n        const updatedItems = [...entries];\r\n        const [movedItem] = updatedItems.splice(draggedIndex, 1);\r\n        updatedItems.splice(index, 0, movedItem);\r\n\r\n        setEntries(updatedItems);\r\n        setDraggedIndex(null);\r\n    };\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    const sendArticle = (article) => {\r\n        console.log(`Sending: ${article.title}`);\r\n        // Add your logic to send the link, e.g., via an API call\r\n    };\r\n\r\n    const copyArticle = async (article) => {\r\n        try {\r\n            await navigator.clipboard.writeText(\r\n                article.title + \"\\n\\n\" + article.link\r\n            );\r\n            console.log(\"Text copied to clipboard\");\r\n        } catch (err) {\r\n            console.error(\"Failed to copy text: \", err);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"article-categoriser\">\r\n            <div className=\"entry-list\">\r\n                {entries.map((article, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"article-card to-categorize\"\r\n                        draggable\r\n                        onDragStart={(e) => handleDragStart(e, index)}\r\n                        onDragOver={handleDragOver}\r\n                        onDrop={(e) => handleDrop(e, index)}\r\n                    >\r\n                        <h3 className=\"article-title\">{article.title}</h3>\r\n                        <a\r\n                            className=\"article-link\"\r\n                            href={article.link}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            {article.link}\r\n                        </a>\r\n                        <button\r\n                            className=\"send-button\"\r\n                            onClick={() => sendArticle(article)}\r\n                        >\r\n                            Send\r\n                        </button>\r\n                        <button\r\n                            className=\"copy-button\"\r\n                            onClick={() => copyArticle(article)}\r\n                        >\r\n                            Copy\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>{\" \"}\r\n            <EntryForm />\r\n            <CategoryGrid />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArticleCategoriser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FaCheckCircle, FaRegCircle } from \"react-icons/fa\";\r\n\r\nconst CheckBox = ({ SwitchState, checked }) => {\r\n\r\n    return (\r\n        <div onClick={() => SwitchState()} style={{ cursor: \"pointer\" }}>\r\n            {checked ? (\r\n                <FaCheckCircle className=\"ciclecheck\" />\r\n            ) : (\r\n                <FaRegCircle className=\"ciclecheck\" />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles/articleCard.css\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nconst ArticleCard = ({ article }) => {\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setChecked(article.tags?.includes(\"Read\") ?? false);\r\n    }, [article]);\r\n\r\n    function SwitchState() {\r\n        console.log(article.tags);\r\n        setChecked(!checked);\r\n        if (!checked) {\r\n            const tags = [\"Current\", \"Read\"];\r\n            ToggleRead(article.id, tags);\r\n        } else {\r\n            const tags = [\"Current\"];\r\n            ToggleRead(article.id, tags);\r\n        }\r\n    }\r\n\r\n    const sendArticle = async (article) => {\r\n        console.log(`Sending: ${article.title}`);\r\n        try {\r\n            const response = await axios.get(\r\n                \"http://localhost:5000/api/SendSignalMessage\",\r\n                {\r\n                    params: {\r\n                        article: article,\r\n                    },\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error sending Article:\", error);\r\n            return [{ title: \"\", link: \"\" }];\r\n        }\r\n    };\r\n\r\n    const copyArticle = async (article) => {\r\n        try {\r\n            await navigator.clipboard.writeText(\r\n                article.title + \"\\n\\n\" + article.link\r\n            );\r\n            console.log(\"Text copied to clipboard\");\r\n        } catch (err) {\r\n            console.error(\"Failed to copy text: \", err);\r\n        }\r\n    };\r\n\r\n    async function ToggleRead(articleID, articleTags) {\r\n        try {\r\n            console.log(articleID);\r\n            const response = await axios.post(\r\n                \"http://192.168.1.12:5000/api/UpdateEntry\",\r\n                {\r\n                    params: {\r\n                        id: articleID, // Axios automatically serializes the array\r\n                        updates: { tags: articleTags },\r\n                    },\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Updating Article:\", error);\r\n            return [{ id: articleID }];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"date\">{article.date}</div>\r\n            <h3 className={!checked ? \"article-title\" : \"inactive-title\"}>\r\n                {article.title}\r\n            </h3>\r\n            <a\r\n                className={!checked ? \"article-link\" : \"inactive-link\"}\r\n                href={article.link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                {article.link}\r\n            </a>\r\n            <button\r\n                className=\"send-button\"\r\n                onClick={() => sendArticle(article)}\r\n            >\r\n                Send\r\n            </button>\r\n            <button\r\n                className=\"copy-button\"\r\n                onClick={() => copyArticle(article)}\r\n            >\r\n                Copy\r\n            </button>\r\n            <CheckBox\r\n                key={article.id}\r\n                SwitchState={SwitchState}\r\n                checked={checked}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArticleCard;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles/NewsFeed.css\";\r\nimport EntryForm from \"./EntryForm\";\r\nimport ArticleCard from \"./articleCard\";\r\n\r\nasync function fetchArticles(url) {\r\n    try {\r\n        const response = await axios.get(url);\r\n        //console.log(\"GET request running\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching articles:\", error);\r\n        return [{ title: \"\", link: \"\" }];\r\n    }\r\n}\r\n\r\nfunction NewsFeed() {\r\n    const [entries, setEntries] = useState([]);\r\n    const intervalRef = useRef(null);\r\n\r\n    const fetchNewArticles = async () => {\r\n        console.log(\"fetching articles At:\", new Date().toLocaleTimeString());\r\n\r\n        const data = await fetchArticles(\r\n            \"http://192.168.1.12:5000/api/newArticles\"\r\n        );\r\n        const revdata = data.reverse();\r\n        setEntries(revdata);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNewArticles();\r\n\r\n        intervalRef.current = setInterval(fetchNewArticles, 1000);\r\n\r\n        return () => {\r\n            if (intervalRef.current) {\r\n                clearInterval(intervalRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Feed\">\r\n            <div className=\"Feed-entry-list\">\r\n                {entries.map((article) => (\r\n                    <div key={article.id} className=\"feed-article-card\">\r\n                        <ArticleCard\r\n                            key={article.id}\r\n                            article={article}\r\n                            articleTags={article.tags}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>{\" \"}\r\n            <EntryForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewsFeed;\r\n","// src/App.js\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport MainApp from \"./components/MainApp\";\nimport BotConfigurator from \"./components/BotConfigurator\";\nimport ArticleCategoriser from \"./components/ArticleCategoriser\";\nimport \"./App.css\";\nimport NewsFeed from \"./components/NewsFeed\";\n\nfunction App() {\n    return (\n        <Router>\n            <Navbar />\n            <Routes>\n                <Route path=\"/\" element={<BotConfigurator />} />\n                <Route path=\"/MainApp\" element={<MainApp />} />\n                <Route\n                    path=\"/ArticleCategoriser\"\n                    element={<ArticleCategoriser />}\n                />\n                <Route path=\"/NewsFeed\" element={<NewsFeed />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}